{"version":3,"sources":["redux/actions/searchAction.js","components/Search/Search.js","API/queriedAction.js","components/SearchHistory/SearchHistory.js","components/Header/Header.js","App.js","reportWebVitals.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["rememberSearch","searchTerm","type","connect","useState","setSearchTerm","results","setResults","dispatch","useDispatch","className","onSubmit","event","query","preventDefault","axios","get","then","response","data","hits","console","log","placeholder","onChange","target","value","map","article","href","url","title","author","SearchHistory","queries","useSelector","state","term","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"ySAAaA,EAAiB,SAACC,GAC7B,MAAO,CACLC,KAAM,gBACND,WAAYA,ICwDDE,cAAQ,KAAM,CAAEH,kBAAhBG,EArDA,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACZH,EADY,KACAI,EADA,OAEWD,mBAAS,IAFpB,mBAEZE,EAFY,KAEHC,EAFG,KAGbC,EAAWC,cAiBjB,OACE,gCACE,qBAAKC,UAAU,aAAf,SACE,uBAAMC,SAnBS,SAACC,GCRI,IAACC,EDSzBD,EAAME,kBCTmBD,EDWZZ,ECVRc,IAAMC,IAAI,8CAAgDH,IDUtCI,MAAK,SAACC,GAC7BX,EAAWW,EAASC,KAAKC,MACzBZ,EAASR,EAAeC,IACxBoB,QAAQC,IAAIhB,OAaV,UACE,uBACEI,UAAU,cACVR,KAAK,SACLqB,YAAY,YACZC,SAdW,SAACZ,GACpBA,EAAME,iBACNT,EAAcO,EAAMa,OAAOC,OAC3BL,QAAQC,IAAIV,EAAMa,OAAOC,UAanB,uBAAOhB,UAAU,gBAAgBR,KAAK,SAASwB,MAAM,gBAGzD,gCACE,iDACCpB,EAAQqB,KAAI,SAACC,GACZ,OACE,qBAAKlB,UAAU,iBAAf,SACE,mBAAGmB,KAAMD,EAAQE,IAAKL,OAAO,QAA7B,SACE,qBAAIf,UAAU,sBAAd,UACE,6BAAKkB,EAAQG,QACb,qCACA,6BAAKH,EAAQI,4B,ME5ChB,SAASC,IAEtB,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WAE7C,OACE,sBAAKxB,UAAU,iBAAf,UACE,oBAAIA,UAAU,uBAAd,8BACA,qBAAKA,UAAU,gBAAf,SACGwB,EAAQP,KAAI,SAACU,GAAD,OACX,8BAAMA,Y,MCVD,SAASC,IACtB,OACE,8BACE,oBAAI5B,UAAU,SAAd,+BCeS6B,MAhBf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,aCFK8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,uCCPRO,EAAe,CACnBd,QAAS,IAYIe,EATK,WAAmC,IAAlCb,EAAiC,uDAAzBY,EAAcE,EAAW,uCACpD,MAAoB,kBAAhBA,EAAOhD,KACF,2BACFkC,GADL,IAEEF,QAAQ,GAAD,mBAAME,EAAMF,SAAZ,CAAqBgB,EAAOjD,eAEzBmC,GCCDe,EALDC,sBACZH,EACAI,8BAAoBC,0BAAgBC,OCAtCC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOP,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.ab3d2ecb.chunk.js","sourcesContent":["export const rememberSearch = (searchTerm) => {\n  return {\n    type: \"CREATE_SEARCH\",\n    searchTerm: searchTerm,\n  };\n};\n","import React, { useState } from \"react\";\nimport \"./Search.css\";\nimport { queryResults } from \"../../API/queriedAction\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { rememberSearch } from \"../../redux/actions/searchAction\";\n\nconst Search = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const dispatch = useDispatch();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    queryResults(searchTerm).then((response) => {\n      setResults(response.data.hits);\n      dispatch(rememberSearch(searchTerm));\n      console.log(results);\n    });\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setSearchTerm(event.target.value);\n    console.log(event.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"search_box\">\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"search_text\"\n            type=\"search\"\n            placeholder=\"Search...\"\n            onChange={handleChange}\n          ></input>\n          <input className=\"search_button\" type=\"submit\" value=\"Search\"></input>\n        </form>\n      </div>\n      <div>\n        <h3>Search Results:</h3>\n        {results.map((article) => {\n          return (\n            <div className=\"search_results\">\n              <a href={article.url} target=\"blank\">\n                <ul className=\"search_results_item\">\n                  <li>{article.title}</li>\n                  <li>by:</li>\n                  <li>{article.author}</li>\n                </ul>\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { rememberSearch })(Search);\n","import axios from \"axios\";\n\nexport const queryResults = (query) => {\n  return axios.get(\"https://hn.algolia.com/api/v1/search?query=\" + query);\n};\n","import React from \"react\";\nimport \"./SearchHistory.css\";\nimport { useSelector } from \"react-redux\";\n\nexport default function SearchHistory() {\n  // allows to grab the part of the state I want to use\n  const queries = useSelector((state) => state.queries);\n\n  return (\n    <div className=\"search_history\">\n      <h3 className=\"search_history_title\">Recent Searches:</h3>\n      <div className=\"searched_item\">\n        {queries.map((term) => (\n          <div>{term}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  return (\n    <div>\n      <h1 className=\"header\">Hacker News API</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search\";\nimport SearchHistory from \"./components/SearchHistory/SearchHistory\";\nimport Header from \"./components/Header/Header\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <Search />\n        </div>\n        <div className=\"col-4\">\n          <SearchHistory />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  queries: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  if (action.type === \"CREATE_SEARCH\") {\n    return {\n      ...state,\n      queries: [...state.queries, action.searchTerm],\n    };\n  } else return state;\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst Store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default Store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}